import express from 'express';
import multer from 'multer';
import Product from '../models/products.js'; 
import slugify from 'slugify';
import path from 'path';
import { fileURLToPath } from 'url';

console.log('üì¶ ƒê√£ load file products.js');

// X√°c ƒë·ªãnh __dirname
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const router = express.Router();

// C·∫•u h√¨nh multer ƒë·ªÉ l∆∞u file ·∫£nh
const storage = multer.diskStorage({
  destination: (req, file, cb) => {
    const uploadPath = path.join(process.cwd(), 'uploads');
    cb(null, uploadPath);
  },
  filename: (req, file, cb) => cb(null, Date.now() + '-' + file.originalname),
});

const upload = multer({ storage });

// POST /products - Th√™m s·∫£n ph·∫©m m·ªõi
router.post('/', upload.single('image'), async (req, res) => {
  try {
    const {
      name,
      description,
      details,
      price,
      quantity,
      category, 
      isFeatured
    } = req.body;

    const imageUrl = req.file ? `/uploads/${req.file.filename}` : '';

    const newProduct = new Product({
      name,
      description,
      details,
      price,
      quantity,
      category,
      isFeatured: isFeatured === 'true',
      image: imageUrl,
      slug: slugify(name, { lower: true, strict: true }),
    });

    await newProduct.save();

    const populatedProduct = await newProduct.populate('category', 'name slug');

    res.status(201).json(populatedProduct);
  } catch (error) {
    console.error('L·ªói khi t·∫°o s·∫£n ph·∫©m:', error);
    res.status(500).json({ message: 'L·ªói khi t·∫°o s·∫£n ph·∫©m' });
  }
});


// GET /products - L·∫•y danh s√°ch s·∫£n ph·∫©m
router.get('/', async (req, res) => {
  try {
    const products = await Product.find()
      .populate('category', 'name slug') // L·∫•y t√™n + slug c·ªßa category
      .sort({ createdAt: -1 });

    res.json(products);
  } catch (error) {
    console.error('L·ªói khi l·∫•y danh s√°ch s·∫£n ph·∫©m:', error);
    res.status(500).json({ message: 'L·ªói khi l·∫•y danh s√°ch s·∫£n ph·∫©m' });
  }
});


// GET /products/:slug - L·∫•y chi ti·∫øt s·∫£n ph·∫©m theo slug
router.get('/:slug', async (req, res) => {
  try {
    const { slug } = req.params;
    const product = await Product.findOne({ slug })
    .populate('category', 'name slug');

    if (!product) {
      return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m' });
    }

    res.json(product);
  } catch (error) {
    console.error('L·ªói khi l·∫•y s·∫£n ph·∫©m theo slug:', error);
    res.status(500).json({ message: 'L·ªói server' });
  }
});

export default router;
